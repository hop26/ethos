{"ast":null,"code":"export default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    headerInvert: 'invert(0)',\n    backgroundColor: 'rgba(0,0,0,0)',\n    mode: 'start',\n    headerHeight: '80px',\n    display: 'none',\n    opacity: 0,\n    zIndex: -10\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //initial state should be set to whatever data structure you want your new state contained in\n  switch (action.type) {\n    case 'DEFAULTHEADER':\n      return Object.assign({}, {\n        headerInvert: 'invert(0)',\n        backgroundColor: 'rgba(0,0,0,0)',\n        mode: 'default',\n        headerHeight: '80px',\n        display: 'none',\n        opacity: 0,\n        zIndex: -10\n      });\n\n    case 'VALUESHEADER':\n      return Object.assign({}, {\n        headerInvert: 'invert(1)',\n        backgroundColor: 'rgba(0,0,0,0)',\n        mode: 'default',\n        headerHeight: '80px',\n        display: 'none',\n        opacity: 0,\n        zIndex: -10\n      });\n      break;\n\n    case 'INVERTHEADER':\n      return Object.assign({}, {\n        headerInvert: 'invert(1)',\n        backgroundColor: 'rgba(0,0,0,0)',\n        mode: 'invert',\n        headerHeight: '80px',\n        display: 'none',\n        opacity: 0,\n        zIndex: -10\n      });\n      break;\n\n    case 'SCROLLHEADER':\n      return {\n        headerInvert: 'invert(1)',\n        backgroundColor: 'rgb(26, 26, 26)',\n        mode: 'scroll',\n        headerHeight: '80px',\n        display: 'none',\n        opacity: 0,\n        zIndex: -10\n      };\n\n    case 'MENUHEADER':\n      return {\n        headerInvert: 'invert(1)',\n        backgroundColor: 'rgb(26,26,26)',\n        mode: 'menu',\n        headerHeight: '100vh',\n        display: 'flex',\n        opacity: 1,\n        zIndex: 10\n      };\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n; // case 'INVERTHEADER':\n//   return Object.assign({}, {\n//     headerInvert: 'invert(1)',\n//     headerHeight: '50px',\n//     display: 'none'\n//   });\n//   break;","map":{"version":3,"sources":["/Users/Lyn/Desktop/Projects/ethos/src/reducers/reducer_header.js"],"names":["state","headerInvert","backgroundColor","mode","headerHeight","display","opacity","zIndex","action","type","Object","assign"],"mappings":"AAAA,eAAe,YAQJ;AAAA,MARaA,KAQb,uEARqB;AAC9BC,IAAAA,YAAY,EAAE,WADgB;AAE9BC,IAAAA,eAAe,EAAE,eAFa;AAG9BC,IAAAA,IAAI,EAAE,OAHwB;AAI9BC,IAAAA,YAAY,EAAE,MAJgB;AAK9BC,IAAAA,OAAO,EAAE,MALqB;AAM9BC,IAAAA,OAAO,EAAC,CANsB;AAO9BC,IAAAA,MAAM,EAAE,CAAC;AAPqB,GAQrB;AAAA,MAARC,MAAQ;;AACX;AACC,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,eAAL;AACD,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACpBV,QAAAA,YAAY,EAAE,WADM;AAEpBC,QAAAA,eAAe,EAAE,eAFG;AAGpBC,QAAAA,IAAI,EAAE,SAHc;AAIpBC,QAAAA,YAAY,EAAE,MAJM;AAKpBC,QAAAA,OAAO,EAAE,MALW;AAMpBC,QAAAA,OAAO,EAAC,CANY;AAOpBC,QAAAA,MAAM,EAAE,CAAC;AAPW,OAAlB,CAAP;;AASG,SAAK,cAAL;AACD,aAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACpBV,QAAAA,YAAY,EAAE,WADM;AAEpBC,QAAAA,eAAe,EAAE,eAFG;AAGpBC,QAAAA,IAAI,EAAE,SAHc;AAIpBC,QAAAA,YAAY,EAAE,MAJM;AAKpBC,QAAAA,OAAO,EAAE,MALW;AAMpBC,QAAAA,OAAO,EAAC,CANY;AAOpBC,QAAAA,MAAM,EAAE,CAAC;AAPW,OAAlB,CAAP;AASF;;AACC,SAAK,cAAL;AACD,aAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACpBV,QAAAA,YAAY,EAAE,WADM;AAEpBC,QAAAA,eAAe,EAAE,eAFG;AAGpBC,QAAAA,IAAI,EAAE,QAHc;AAIpBC,QAAAA,YAAY,EAAE,MAJM;AAKpBC,QAAAA,OAAO,EAAE,MALW;AAMpBC,QAAAA,OAAO,EAAC,CANY;AAOpBC,QAAAA,MAAM,EAAE,CAAC;AAPW,OAAlB,CAAP;AASA;;AACG,SAAK,cAAL;AACD,aAAO;AACFN,QAAAA,YAAY,EAAE,WADZ;AAEFC,QAAAA,eAAe,EAAE,iBAFf;AAGFC,QAAAA,IAAI,EAAE,QAHJ;AAIFC,QAAAA,YAAY,EAAE,MAJZ;AAKFC,QAAAA,OAAO,EAAE,MALP;AAMFC,QAAAA,OAAO,EAAC,CANN;AAOFC,QAAAA,MAAM,EAAE,CAAC;AAPP,OAAP;;AASC,SAAK,YAAL;AACD,aAAO;AACFN,QAAAA,YAAY,EAAE,WADZ;AAEFC,QAAAA,eAAe,EAAE,eAFf;AAGFC,QAAAA,IAAI,EAAE,MAHJ;AAIFC,QAAAA,YAAY,EAAE,OAJZ;AAKFC,QAAAA,OAAO,EAAE,MALP;AAMFC,QAAAA,OAAO,EAAC,CANN;AAOFC,QAAAA,MAAM,EAAE;AAPN,OAAP;AASA;;AAEH;AACC,aAAOP,KAAP;AACA;AAzDF;AA2DA;AAAA,C,CAMD;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export default function(state = {\n  headerInvert: 'invert(0)',\n  backgroundColor: 'rgba(0,0,0,0)',\n  mode: 'start',\n  headerHeight: '80px',\n  display: 'none',\n  opacity:0,\n  zIndex: -10,\n}, action) {\n//initial state should be set to whatever data structure you want your new state contained in\n\tswitch (action.type) {\n    case 'DEFAULTHEADER':\n\t\t\treturn Object.assign({}, {\n        headerInvert: 'invert(0)',\n        backgroundColor: 'rgba(0,0,0,0)',\n        mode: 'default',\n        headerHeight: '80px',\n        display: 'none',\n        opacity:0,\n        zIndex: -10,\n      });\n      case 'VALUESHEADER':\n  \t\t\treturn Object.assign({}, {\n          headerInvert: 'invert(1)',\n          backgroundColor: 'rgba(0,0,0,0)',\n          mode: 'default',\n          headerHeight: '80px',\n          display: 'none',\n          opacity:0,\n          zIndex: -10,\n        });\n\t\t\tbreak;\n    case 'INVERTHEADER':\n\t\t\treturn Object.assign({}, {\n        headerInvert: 'invert(1)',\n        backgroundColor: 'rgba(0,0,0,0)',\n        mode: 'invert',\n        headerHeight: '80px',\n        display: 'none',\n        opacity:0,\n        zIndex: -10,\n      });\n\t\t\tbreak;\n      case 'SCROLLHEADER':\n  \t\t\treturn {\n          headerInvert: 'invert(1)',\n          backgroundColor: 'rgb(26, 26, 26)',\n          mode: 'scroll',\n          headerHeight: '80px',\n          display: 'none',\n          opacity:0,\n          zIndex: -10,\n        };\n      case 'MENUHEADER':\n  \t\t\treturn {\n          headerInvert: 'invert(1)',\n          backgroundColor: 'rgb(26,26,26)',\n          mode: 'menu',\n          headerHeight: '100vh',\n          display: 'flex',\n          opacity:1,\n          zIndex: 10,\n        };\n  \t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn state;\n\t\t\tbreak;\n\t}\n};\n\n\n\n\n\n// case 'INVERTHEADER':\n//   return Object.assign({}, {\n//     headerInvert: 'invert(1)',\n//     headerHeight: '50px',\n//     display: 'none'\n//   });\n//   break;\n"]},"metadata":{},"sourceType":"module"}